name: Update Version Info

on:
  release:
    types: [published]
  workflow_dispatch:   # 添加手动触发入口

jobs:
  update-version-info:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Fetch and process latest release info
        run: |
          # 获取最新版本信息
          RELEASE_JSON=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
          
          # 直接从JSON提取所需字段，避免设置整个JSON为环境变量
          VERSION=$(echo $RELEASE_JSON | jq -r .tag_name)
          PUBLISHED=$(echo $RELEASE_JSON | jq -r .published_at)
          BODY=$(echo $RELEASE_JSON | jq -r .body)
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # 创建version-info.json文件
          echo "{" > version-info.json
          echo "  \"version\": \"$VERSION\"," >> version-info.json
          echo "  \"published_at\": \"$PUBLISHED\"," >> version-info.json
          echo "  \"downloads\": [" >> version-info.json
          
          # 处理下载资源
          local_first=true
          echo $RELEASE_JSON | jq -c '.assets[] | select(.name | endswith(".zip") or endswith(".7z"))' | while read -r asset; do
            if [ "$local_first" = "true" ]; then
              local_first=false
            else
              echo "    ," >> version-info.json
            fi
            
            NAME=$(echo $asset | jq -r .name)
            URL=$(echo $asset | jq -r .browser_download_url)
            SIZE=$(echo $asset | jq -r .size)
            
            echo "    {" >> version-info.json
            echo "      \"name\": \"$NAME\"," >> version-info.json
            echo "      \"url\": \"$URL\"," >> version-info.json
            echo "      \"size\": $SIZE" >> version-info.json
            echo -n "    }" >> version-info.json
          done
          
          echo "" >> version-info.json
          echo "  ]," >> version-info.json
          # 使用jq处理body以确保正确的JSON转义
          ESCAPED_BODY=$(echo "$BODY" | jq -Rs .)
          echo "  \"body\": $ESCAPED_BODY" >> version-info.json
          echo "}" >> version-info.json
          
          cat version-info.json
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: .
          target-folder: .
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: false
          clean-exclude: |
            !version-info.json
          commit-message: "Update version info to ${{ env.VERSION }}"