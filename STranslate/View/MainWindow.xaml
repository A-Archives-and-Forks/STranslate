<Window x:Class="STranslate.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:STranslate.Style;assembly=STranslate.Style"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        x:Name="Mwin"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True"
        ShowInTaskbar="False"
        ResizeMode="NoResize"
        Topmost="True"
        WindowStyle="None"
        SizeToContent="Height"
        Width="400"
        FontFamily="{DynamicResource FontFamily_Default}"
        Icon="pack://application:,,,/STranslate.Style;component/Resources/translate.ico">
    <Window.Resources>
        <converter:WidthConverter x:Key="WidthConverter"/>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl+Shift"
                    Key="Q"
                    Command="{Binding ExitCmd}"/>
        <KeyBinding Modifiers="Ctrl+Shift"
                    Key="T"
                    Command="{Binding TopmostCmd}"
                    CommandParameter="{Binding ElementName=TopmostBtn, Mode=OneWay}"/>
        <KeyBinding Modifiers="Ctrl+Shift"
                    Key="R"
                    Command="{Binding ThemeConvertCmd}"/>
        <KeyBinding Key="Esc"
                    Command="{Binding EscCmd}"
                    CommandParameter="{Binding ElementName=TopmostBtn, Mode=OneWay}"/>
    </Window.InputBindings>


    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding MouseLeftDownCmd}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding DeactivatedCmd}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border Style="{DynamicResource BorderMainStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="5*"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="7*"/>
            </Grid.RowDefinitions>

            <!--header-->
            <Grid x:Name="Header">
                <Button x:Name="TopmostBtn"
                        Command="{Binding TopmostCmd}"
                        CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Template="{DynamicResource ButtonTemplateUnTopmost}"/>
                <Button Width="auto"
                        Template="{DynamicResource ButtonTemplateTheme}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Margin="0,0,100,0"
                        Command="{Binding ThemeConvertCmd}"
                        CommandParameter="{Binding ElementName=Mwin}"/>
                <ComboBox Style="{DynamicResource cmbstyle}"
                          Margin="0,5,10,0"
                          ItemsSource="{Binding TranslationInterface}"
                          SelectedItem="{Binding SelectedTranslationInterface, Mode=TwoWay, NotifyOnSourceUpdated=True}"
                          DisplayMemberPath="Name"
                          HorizontalAlignment="Right">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectLangChangedCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <!--input-->
            <Grid x:Name="Input"
                  Grid.Row="1"
                  Margin="10,0,10,0">
                <!--输入框-->
                <Border x:Name="BorderInput"
                        Style="{DynamicResource BorderInOutputStyle}">
                    <Grid>
                        <TextBox x:Name="TextBoxInput"
                                 Style="{DynamicResource TextBoxInputStyle}"
                                 Text="{Binding InputTxt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding TranslateCmd}" Key="Enter" />
                                <KeyBinding Command="{Binding TranslateCmd}" CommandParameter="{Binding ElementName=TextBoxInput, Mode=OneWay}" Modifiers="Ctrl" Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <StackPanel Orientation="Horizontal"
                                    Margin="10,5"
                                    VerticalAlignment="Bottom">
                            <Button Template="{DynamicResource ButtonTemplateSpeak}"
                                    Visibility="{Binding InputTxt, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding SourceSpeakCmd}"/>
                            <Button Template="{DynamicResource ButtonTemplate}"
                                    Click="Copy_Click"
                                    Visibility="{Binding InputTxt, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding CopyInputCmd}">
                                <Button.ToolTip>
                                    <ToolTip x:Name="复制输入内容" Template="{DynamicResource ToolTipTemplate}"/>
                                </Button.ToolTip>
                            </Button>
                            <Border Style="{DynamicResource LanguageMarkBorderStyle}"
                                    Visibility="{Binding IdentifyLanguage, Converter={StaticResource String2VisibilityConverter}}">
                                <StackPanel Margin="5,2"
                                            Orientation="Horizontal">
                                    <TextBlock Text="识别为 "
                                               Style="{DynamicResource LanguageMarkTextBlockStyle}"/>
                                    <TextBlock Text="{Binding IdentifyLanguage}"
                                               Foreground="#af67c1"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!--toast-->
            <Border x:Name="Toast"
                    CornerRadius="12"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    VerticalAlignment="Top"
                    Visibility="Visible"
                    Margin="0,-40"
                    Width="{Binding ElementName=toastTxt, Path=ActualWidth,Converter={StaticResource WidthConverter}}"
                    BorderBrush="Transparent"
                    Background="#65c248">
                <WrapPanel Orientation="Horizontal"
                           HorizontalAlignment="Center">
                    <TextBlock Text="&#xe632;"
                               FontSize="16"
                               Foreground="White"
                               Padding="5,10"
                               Style="{StaticResource IconStyle}"/>
                    <TextBlock x:Name="toastTxt"
                               Background="Transparent"
                               Foreground="#fff"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Padding="0,5,10,5"
                               FontSize="16"/>
                </WrapPanel>
            </Border>

            <!--mid-->
            <StackPanel x:Name="MidArea"
                        Grid.Row="2"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <TextBlock Text="当前语言:  "
                           Style="{DynamicResource MidStyle}"/>
                <ComboBox x:Name="InCombo"
                          Style="{DynamicResource cmbstyle}"
                          ItemsSource="{Binding InputCombo}"
                          SelectedItem="{Binding InputComboSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectLangChangedCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Separator Margin="20,0"/>
                <TextBlock Text="目标语言:  "
                           Style="{DynamicResource MidStyle}"/>
                <ComboBox x:Name="OutCombo"
                          Style="{DynamicResource cmbstyle}"
                          ItemsSource="{Binding OutputCombo}"
                          SelectedItem="{Binding OutputComboSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectLangChangedCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </StackPanel>

            <!--output-->
            <Grid x:Name="Output"
                  Margin="10,0,10,10"
                  Grid.Row="3">
                <!--输出框-->
                <Border x:Name="BorderOutput"
                    Style="{DynamicResource BorderInOutputStyle}"
                    Height="{Binding Height, ElementName=Output}">
                    <Grid>
                        <TextBox x:Name="TextBoxOutput"
                                Style="{DynamicResource TextBoxOutputStyle}"
                                Text="{Binding OutputTxt}"/>
                        <StackPanel Orientation="Horizontal"
                                Margin="10,5"
                                VerticalAlignment="Bottom">
                            <!--语音-->
                            <Button Template="{DynamicResource ButtonTemplateSpeak}"
                                    Visibility="{Binding OutputTxt, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding TargetSpeakCmd}"/>
                            <!--普通复制-->
                            <Button Template="{DynamicResource ButtonTemplate}"
                                    Click="Copy_Click"
                                    Visibility="{Binding OutputTxt, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding CopyResultCmd}">
                                <Button.ToolTip>
                                    <ToolTip x:Name="直接复制结果" Template="{DynamicResource ToolTipTemplate}"/>
                                </Button.ToolTip>
                            </Button>
                            <!--蛇形复制-->
                            <Button Margin="5,0"
                                    Click="Copy_Click"
                                    Template="{DynamicResource ButtonTemplateSnakeCopy}"
                                    Visibility="{Binding SnakeRet, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding CopySnakeResultCmd}">
                                <Button.ToolTip>
                                    <ToolTip x:Name="复制为蛇形字符串" Template="{DynamicResource ToolTipTemplate}"/>
                                </Button.ToolTip>
                            </Button>
                            <!--小驼峰复制-->
                            <Button Template="{DynamicResource ButtonTemplateSmallHumpCopy}"
                                    Click="Copy_Click"
                                    Visibility="{Binding SmallHumpRet, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding CopySmallHumpResultCmd}">
                                <Button.ToolTip>
                                    <ToolTip x:Name="复制为小驼峰字符串" Template="{DynamicResource ToolTipTemplate}"/>
                                </Button.ToolTip>
                            </Button>
                            <!--大驼峰复制-->
                            <Button Margin="5,0"
                                    Click="Copy_Click"
                                    Template="{DynamicResource ButtonTemplateLargeHumpCopy}"
                                    Visibility="{Binding LargeHumpRet, Converter={StaticResource String2VisibilityConverter}}"
                                    Command="{Binding CopyLargeHumpResultCmd}">
                                <Button.ToolTip>
                                    <ToolTip x:Name="复制为大驼峰字符串" Template="{DynamicResource ToolTipTemplate}"/>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Border>
</Window>